{"version":3,"sources":["utils/cssUtils.js","components/button/button.jsx","reducers/loginReducer.js","reducers/index.js","state.js","actions/loginActions.js","components/navigations/navigations.jsx","components/header/header.jsx","components/select/select.js","components/tabBar/tabBarNav.js","components/tabBar/tabBar.js","components/tabBar/tabBarItem.js","pages/mainPage/MainPage.jsx","hoc/withLoginProps.js","pages/aboutPage/AboutPage.jsx","pages/newsPage/NewsPage.jsx","App.js","serviceWorker.js","index.js"],"names":["CssUtils","mergeClasses","classes","classNames","mergeModifiers","baseClass","modifiers","cssModifiers","Array","slice","result","forEach","modifier","Button","onClickAction","e","console","log","props","onClick","preventDefault","this","children","className","disabled","size","color","link","isBlock","text","buttonClass","to","Component","initialState","login","username","password","appReducer","combineReducers","state","action","type","payload","form","formReduser","rootReduser","store","createStore","rootReducer","dispatch","getState","loginAction","logoutAction","Navigations","connect","Header","Option","handleClick","value","isActive","item","selected","includes","classOption","multiple","currentValue","React","Select","myRef","createRef","open","checkClickOnSelect","event","box","current","getBoundingClientRect","clientX","right","left","clientY","bottom","top","handleToggle","handleClickRemove","select","input","onChange","onChoseItem","items","join","setState","prevState","hasSelected","filter","i","handleClear","document","addEventListener","removeEventListener","labeltext","getText","textField","ref","map","option","key","id","length","stopPropagation","val","find","TabBarNav","navLabel","onChangeActiveTab","TabBar","activeTab","getChildrenLabels","label","setActiveTab","renderTabs","attrs","Children","child","cloneElement","TabBarItem","MainPage","_onSubmit","formData","LoginReduxForm","onSubmit","reduxForm","handleSubmit","htmlFor","Field","component","name","aria-describedby","placeholder","mapDispatchToProps","withLoginProps","View","AboutPage","NewsPage","App","path","exact","render","Boolean","window","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4TA0BeA,EANE,CACbC,aAnBiB,sCAAIC,EAAJ,yBAAIA,EAAJ,uBAAgBC,IAAWD,IAoB5CE,eAlBmB,SAACC,EAAUC,GAC9B,IAAIA,EAAW,OAAOD,EAEtB,IAAME,EAAeD,aAAqBE,MAAQF,EAAUG,QAAU,CAACH,GAGnEI,EAASL,EAOb,OANAE,EAAaI,SAAQ,SAAAC,GACO,kBAAdN,IACNI,GAAM,WAAQL,EAAR,aAAsBO,OAI7BF,I,QC0BIG,E,2MArCXC,cAAgB,SAAAC,GACZC,QAAQC,IAAI,EAAKC,MAAMC,SACnBJ,EAAEK,iBACF,EAAKF,MAAMC,QAAQJ,I,wEAEjB,IAAD,EAGDM,KAAKH,MADLI,EAFC,EAEDA,SAAUC,EAFT,EAESA,UAAWJ,EAFpB,EAEoBA,QAASK,EAF7B,EAE6BA,SAASC,EAFtC,EAEsCA,KAAKC,EAF3C,EAE2CA,MAAMC,EAFjD,EAEiDA,KAAMC,EAFvD,EAEuDA,QAASC,EAFhE,EAEgEA,KAE/DC,EAAc9B,EAASC,aACzBsB,EACAG,GAAK,UAAOH,EAAP,YAAoBG,GACzBD,GAAI,UAAOF,EAAP,YAAoBE,GACxBG,GAAO,UAAOL,EAAP,WAGX,OAAGI,EAEK,kBAAC,IAAD,CACII,GAAIJ,EAAMJ,UAAWO,GAEpBD,GAAQP,GAKjB,4BACCC,UAAWO,EACXX,QAASA,GAAWE,KAAKP,cACzBU,SAAUA,GAENK,GAAQP,O,GAhCJU,a,ykBCLrB,IAAMC,EAAe,CACjBC,OAAO,EACPC,SAAU,GACVC,SAAU,I,SCGRC,EAAaC,YAAgB,CAC/BJ,MDDwB,WAAiC,IAAhCK,EAA+B,uDAAvBN,EAAcO,EAAS,uCACxD,OAAQA,EAAOC,MACX,IAAK,QACD,YACOF,EADP,GAEOC,EAAOE,QAFd,CAGIR,OAAO,IAGf,IAAK,SAED,YACOD,GAGX,QACI,OAAOM,ICdfI,KAAMC,MAOKC,EAJK,SAACN,EAAMC,GACvB,OAAOH,EAAWE,EAAMC,ICRtBM,EAAQC,YAAYC,GAEbC,EAAWH,EAAMG,SAEfH,GADSA,EAAMI,SACfJ,GCLFK,EAAc,SAACT,GACpB1B,QAAQC,IAAI,SAASyB,GACzBO,EAAS,CACLR,KAAM,QACNC,aAMKU,EAAe,WACxBH,EAAS,CACLR,KAAM,Y,QCXRY,E,iLAGQ,IACEnB,EAAUb,KAAKH,MAAfgB,MACR,OACI,yBAAKX,UAAU,kDACP,wBAAIA,UAAU,sBACV,wBAAIA,UAAU,YACV,kBAAC,EAAD,CAAQA,UAAU,WAAYG,MAAM,UAAUC,KAAK,SAAnD,+CAEJ,wBAAIJ,UAAU,YACV,kBAAC,EAAD,CAAQA,UAAU,WAAYG,MAAM,UAAUC,KAAK,SAAnD,gDAEJ,wBAAIJ,UAAU,YACV,kBAAC,EAAD,CAAQA,UAAU,WAAWG,MAAM,UAAUC,KAAK,UAAlD,6DAEJ,wBAAIJ,UAAU,oBACTW,GAAS,kBAAC,EAAD,CAAQX,UAAU,MAAMJ,QAASiC,EAAc1B,MAAM,SAArD,0C,GAlBZM,aA8BXsB,eAHS,SAAAf,GAAK,MAAI,CAC7BL,MAAOK,EAAML,MAAMA,SAERoB,CAAyBD,GCtBzBE,E,iLARP,OACI,6BACG,kBAAC,EAAD,W,GAJMvB,a,kCCEfwB,G,kNACFC,YAAc,WACV,EAAKvC,MAAMC,SAAW,EAAKD,MAAMC,QAAQ,EAAKD,MAAMwC,Q,EAExDC,SAAW,SAAAC,GACP,OAAO,EAAK1C,MAAM2C,SAASC,SAASF,I,wEAIpC,IAAIG,EAQJ,OAHIA,EAJC1C,KAAKH,MAAM8C,SAIE3C,KAAKsC,SAAStC,KAAKH,MAAMwC,OAAS,0BAA4B,iBAH9DrC,KAAKH,MAAM+C,eAAiB5C,KAAKH,MAAMwC,MAAQ,0BAA4B,iBAOzF,yBAAKnC,UAAWwC,EAAa5C,QAASE,KAAKoC,aAAcpC,KAAKH,MAAMW,U,GAlB3DqC,IAAMlC,YA0KZmC,E,2MA9IXC,MAAQF,IAAMG,Y,EACd9B,MAAQ,CACJ+B,MAAM,EACNT,SAAU,GACVH,MAAO,M,EAYXa,mBAAqB,SAACC,GAElB,IACIC,EADS,EAAKL,MAAMM,QACTC,yBACZH,EAAMI,QAAUH,EAAII,OAASL,EAAMI,QAAUH,EAAIK,MAAQN,EAAMO,QAAUN,EAAIO,QAAUR,EAAMO,QAAUN,EAAIQ,MAC3G,EAAKC,gB,EAwCZC,kBAAmB,SAACzB,GAChB,EAAK0B,OAAO1B,GACZ,EAAKxC,MAAMmE,MAAMC,SAAS5B,I,EAG9BD,YAAc,SAACC,GACP,EAAKxC,MAAM8C,UACX,EAAKoB,OAAO1B,GACZ,EAAKxC,MAAMmE,MAAMC,SAAS5B,KAE1B,EAAKxC,MAAMmE,MAAMC,SAAS5B,GAC1B,EAAKwB,iB,EAIbK,YAAc,SAAAC,GACV,IAAM9B,EAAQ8B,EAAMC,KAAK,MAAMhF,MAAM,EAAG,IACxC,EAAKiF,SAAS,CACVhC,MAAOA,IAAU8B,EAAMC,KAAK,MAAQ/B,EAA7B,UAAwCA,EAAxC,U,EAGfwB,aAAe,SAACnE,GAEZ,EAAK2E,UAAS,SAAAC,GAAS,MAAK,CAACrB,MAAOqB,EAAUrB,U,EAGlDc,OAAS,SAAAxB,GACL,IAAMgC,EAAc,EAAKrD,MAAMsB,SAASC,SAASF,GACjD,EAAK8B,UAAS,SAAAnD,GAAK,MAAK,CACpBsB,SAAU+B,EACJrD,EAAMsB,SAASgC,QAAO,SAAAC,GAAC,OAAIA,IAAMlC,KADlB,sBAEXrB,EAAMsB,UAFK,CAEKD,S,EAKlCmC,YAAc,WACV,EAAK7E,MAAMmE,MAAMC,SAAS,MAC1B,EAAKJ,gB,iIAzFF7D,KAAKkB,MAAM+B,KACV0B,SAASC,iBAAiB,QAAS5E,KAAKkD,oBAExCyB,SAASE,oBAAoB,QAAS7E,KAAKkD,sB,+BAyFzC,IAAD,SACsBlD,KAAKH,MAAzBiF,EADF,EACEA,UAAWX,EADb,EACaA,MACZY,EAAU/E,KAAKgF,UACrB,OACI,yBAAM9E,UAAS,iBAAYF,KAAKkB,MAAM+B,MAAQ,WAC1C,yBACI/C,UAAU,gBACVJ,QAASE,KAAK6D,cAEbkB,GAEL,yBAAKE,IAAKjF,KAAK+C,MAAO7C,UAAU,gBAC5B,yBAAKA,UAAU,iBAAiBJ,QAASE,KAAK0E,aAAcI,GAC3DX,EAAMe,KAAI,SAAAC,GACP,OACI,kBAAC,EAAD,CACIxC,SAAU,EAAK9C,MAAM8C,SACrBH,SAAU,EAAKtB,MAAMsB,SACrB4C,IAAKD,EAAOE,GACZvF,QAAS,EAAKsC,YACdC,MAAO8C,EAAO9C,MACd7B,KAAM2E,EAAO3E,KACboC,aAAc,EAAK/C,MAAMmE,MAAM3B,e,gCAlG1C,IAAD,SACsBrC,KAAKH,MAAhCmE,EADK,EACLA,MAAOG,EADF,EACEA,MAAOW,EADT,EACSA,UACrB,GAAI9E,KAAKH,MAAM8C,SACX,OAAI3C,KAAKkB,MAAMsB,SAAS8C,OAAS,EACtB,YAAItF,KAAKkB,MAAMsB,UAAU0C,KAAI,SAAA3C,GAChC,OACI,0BACAzC,QAAS,SAACqD,GACNA,EAAMoC,mBAENH,IAAK7C,EACLrC,UAAU,wBAETqC,EACD,uBACIzC,QAAS,SAACqD,GACNA,EAAMoC,kBACN,EAAKzB,kBAAkBvB,KAH/B,cAQLuC,EAKf,GAAKd,EAAM3B,OAAgC,IAAvB2B,EAAM3B,MAAMiD,OAEzB,CACH,IAAME,EAAMrB,EAAMsB,MAAK,SAAAhB,GAAC,OAAIA,EAAEpC,QAAU,EAAKxC,MAAMmE,MAAM3B,SACzD,OAAOmD,GAAOA,EAAIhF,KAHlB,OAAOsE,M,GA3DEjC,IAAMlC,W,QCRZ+E,EAhBG,SAAC,GAEO,IADHC,EACE,EADFA,SAAUC,EACR,EADQA,kBAAmB1F,EAC3B,EAD2BA,UAGhD,OACI,yBACIA,UAAWA,EACXJ,QAAS,WACL8F,EAAkBD,KAGrBA,ICsDEE,G,kNA7Db3E,MAAQ,CACN4E,UAAW,M,EAUbC,kBAAoB,SAAC9F,GACnB,OAAOA,EAASiF,KAAI,qBAAGrF,MAAkBmG,U,EAG3CC,aAAe,SAACH,GACdnG,QAAQC,IAAIkG,GACsB,EAAK5E,MAA/B4E,YACWA,GACjB,EAAKzB,SAAS,CACZyB,e,EAMNI,WAAa,WAAO,IAAD,EACS,EAAKrG,MAAvBI,gBADS,MACE,GADF,EAET6F,EAAc,EAAK5E,MAAnB4E,UACR,OACI,wBAAI5F,UAAU,gBACb,EAAK6F,kBAAkB9F,GAAUiF,KAAI,SAACS,GAAD,OAClC,wBAAIzF,UAAU,YAClB,kBAAC,EAAD,CACEkF,IAAKO,EACLA,SAAUA,EACVzF,UAAW4F,IAAcH,EAAW,kBAAoB,WACxDC,kBAAmB,EAAKK,qB,mFAjCX,IAAD,EACQjG,KAAKH,MAAvBI,gBADU,MACC,GADD,EAEZ6F,EAAY9F,KAAK+F,kBAAkB9F,GAAU,GACnDD,KAAKiG,aAAaH,K,+BAoCV,IACAA,EAAc9F,KAAKkB,MAAnB4E,UADD,EAEwB9F,KAAKH,MAA5BI,EAFD,EAECA,SAAakG,EAFd,4BAKP,OACE,wBAASA,EACT,yBAAKjG,UAAU,gBACZF,KAAKkG,cAEN,yBAAKhG,UAAU,iBACZ2C,IAAMuD,SAASlB,IAAIjF,GAAS,SAAAoG,GAAK,OAAIxD,IAAMyD,aAAaD,EAAM,CAACP,uB,GAxDrDnF,cCON4F,EAVI,SAAC,GAEd,IADJtG,EACG,EADHA,SAAU+F,EACP,EADOA,MAAMF,EACb,EADaA,UACb,gDACH,OACE,yBAAK5F,UAAW4F,IAAcE,EAAQ,4BAA8B,YACjE/F,ICCDuG,E,2MAOFC,UAAY,SAACC,GACT5E,EAAY4E,I,qHAKZ,OACI,yBAAKxG,UAAU,aACX,2HACA,kBAACyG,EAAD,CAAgBC,SAAU5G,KAAKyG,YAC/B,kBAAC,EAAD,KACI,kBAAC,EAAD,CAAYT,MAAM,cAAlB,6bAUA,kBAAC,EAAD,CAAYA,MAAM,eAAlB,gHAOA,kBAAC,EAAD,CAAYA,MAAM,SAAlB,+F,GAnCGrF,aA4FjBgG,EAAiBE,YAAU,CAC7BvF,KAAM,aADauF,EA7CL,SAAChH,GAAD,OACd,0BAAMK,UAAU,qCAAqC0G,SAAU/G,EAAMiH,cACjE,yBAAK5G,UAAU,cACX,2BAAO6G,QAAQ,sBAAf,SACA,kBAACC,EAAA,EAAD,CAAO5F,KAAK,OAAO6F,UAAW,QAASC,KAAK,WAAWhH,UAAU,eAAemF,GAAG,qBAC5E8B,mBAAiB,YAAYC,YAAY,WAGpD,yBAAKlH,UAAU,cACX,2BAAO6G,QAAQ,yBAAf,YACA,kBAACC,EAAA,EAAD,CAAOC,UAAW,QAAS7F,KAAK,WAAW8F,KAAK,WAAWhH,UAAU,eAC9DmF,GAAG,wBACH+B,YAAY,cAEvB,kBAACJ,EAAA,EAAD,CACIE,KAAK,OACLD,UAAWnE,EACXH,UAAQ,EACRmC,UAAU,yKACVX,MAAO,CACH,CAACkB,GAAI,EAAGhD,MAAO,mDAAY7B,KAAM,oDACjC,CAAC6E,GAAI,EAAGhD,MAAO,qEAAe7B,KAAM,sEACpC,CAAC6E,GAAI,EAAGhD,MAAO,gEAAe7B,KAAM,iEACpC,CAAC6E,GAAI,EAAGhD,MAAO,uCAAU7B,KAAM,wCAC/B,CAAC6E,GAAI,EAAGhD,MAAO,6CAAW7B,KAAM,8CAChC,CAAC6E,GAAI,EAAGhD,MAAO,iCAAS7B,KAAM,qCAgBtC,4BAAQY,KAAK,SAASlB,UAAU,mBAAhC,cAgBFmH,EAAqB,CACvBvF,eAOWG,eAdS,SAAAf,GAAK,MAAK,CAC9BL,MAAOK,EAAML,MAAMA,MACnBC,SAAUI,EAAML,MAAMC,SACtBC,SAAUG,EAAML,MAAME,YAWcsG,EAAzBpF,CAA6CuE,GCnF7Cc,EA9BQ,SAACC,GACpB,wLAkBQ,OAFkBvH,KAAKH,MAAfgB,MAMD,kBAAC0G,EAASvH,KAAKH,OAHX,kBAAC,IAAD,CAAUa,GAAG,cAnBhC,EAAM,CAAeC,cCJnB6G,E,iLAEE,OACI,4F,GAHY7G,aAaTsB,eAJS,SAAAf,GAAK,MAAI,CAC7BL,MAAOK,EAAML,MAAMA,SAGRoB,CAAyBqF,EAAeE,ICbjDC,E,iLAEE,OACI,+E,GAHW9G,aAcRsB,eAJS,SAAAf,GAAK,MAAI,CAC7BL,MAAOK,EAAML,MAAMA,SAGRoB,CAAyBqF,EAAeG,ICiBxCC,E,iLAvBP,OACI,kBAAC,IAAD,CAAWjG,MAAOA,GACd,kBAAC,IAAD,KACI,kBAAC,EAAD,MACA,yBAAKvB,UAAU,kBAEX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOyH,KAAK,IAAIC,OAAK,EAACX,UAAWT,IACjC,kBAAC,IAAD,CAAOmB,KAAK,QAAQV,UAAWT,IAC/B,kBAAC,IAAD,CAAOmB,KAAK,SAASV,UAAWO,IAChC,kBAAC,IAAD,CAAOG,KAAK,QAAQV,UAAWQ,IAC/B,kBAAC,IAAD,CAAOI,OAAQ,WACX,OAAQ,+E,GAdtBlH,aCEEmH,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASN,OAAO,kBAAC,EAAD,MAASlD,SAASyD,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.8416e833.chunk.js","sourcesContent":["import classNames from 'classnames';\n\nconst mergeClasses = (...classes) => classNames(classes);\n\nconst mergeModifiers = (baseClass,modifiers) =>{\n    if(!modifiers) return baseClass;\n\n    const cssModifiers = modifiers instanceof Array ? modifiers.slice() : [modifiers];\n\n\n    let result = baseClass;\n    cssModifiers.forEach(modifier=>{\n        if(typeof modifiers === 'string'){\n            result += ` ${baseClass}--${modifier}`\n        }\n    });\n\n    return result;\n};\n\nconst CssUtils = {\n    mergeClasses,\n    mergeModifiers\n}\n\n\nexport default CssUtils;\n","import React, {Component} from 'react';\n// import PropTypes from 'prop-types';\nimport CssUtils from '../../utils/cssUtils'\nimport {NavLink} from \"react-router-dom\";\n\nclass Button extends Component {\n    onClickAction = e => {\n        console.log(this.props.onClick)\n            e.preventDefault();\n            this.props.onClick(e);\n    }\n    render() {\n        const {\n            children, className, onClick, disabled,size,color,link, isBlock ,text,\n        } = this.props;\n        const buttonClass = CssUtils.mergeClasses(\n            className,\n            color && `${className}-${color}`,\n            size && `${className}-${size}`,\n            isBlock && `${className}-block`\n        );\n\n        if(link){\n            return (\n                <NavLink\n                    to={link} className={buttonClass}\n                >\n                    {text || children}\n                </NavLink>\n            )\n        }\n        return (\n            <button\n             className={buttonClass}\n             onClick={onClick && this.onClickAction}\n             disabled={disabled}\n            >\n                {text || children}\n            </button>\n        );\n    }\n}\n\nexport default Button;\n//\n// const Button = ({children, className, onClick, disabled, active, ...attrs}) => {\n//\n//\n//     const classes = classNames(\n//         'btn',\n//         className,\n//         {active},\n//         {disabled}\n//     )\n//\n//     const Tag = attrs.href ? 'a' : 'button';\n//     return (\n//         <Tag\n//             {...attrs}\n//             className={classes}\n//             disable={disabled}\n//             onClick={onClickAction}\n//\n//         >\n//             {children}\n//         </Tag>\n//     )\n// };\n//\n// Button.propTypes = {\n//     children: PropTypes.node,\n//     onClick: PropTypes.func,\n//     classNames: PropTypes.string,\n//     disabled: PropTypes.bool,\n//     active: PropTypes.bool\n//\n// };\n// Button.defaultProps = {\n//     children: 'Button',\n//     onClick: () => {\n//     },\n//     classNames: '',\n//     disabled: false,\n//     active: false\n//\n// };\n//\n// export default Button;\n","const initialState = {\n    login: false,\n    username: '',\n    password: '',\n};\n\nexport const loginReducer = (state = initialState, action)=>{\n    switch (action.type) {\n        case 'LOGIN':\n            return{\n                ...state,\n                ...action.payload,\n                login: true,\n            }\n\n        case 'LOGOUT':\n\n            return{\n                ...initialState\n            }\n\n        default:\n            return state;\n\n\n    }\n\n}\n","import {loginReducer} from './loginReducer';\n\nimport {combineReducers} from \"redux\";\nimport {reducer as formReduser} from \"redux-form\";\n\n\nconst appReducer = combineReducers({\n    login: loginReducer,\n    form: formReduser,\n});\n\nconst rootReduser = (state,action) =>{\n    return appReducer(state,action);\n};\n\nexport default rootReduser;\n","import {createStore, applyMiddleware, compose} from 'redux';\n\nimport rootReducer from './reducers/';\n\nconst store = createStore(rootReducer);\n\nexport const dispatch = store.dispatch;\nexport const getState = store.getState;\nexport default store;\n","import { dispatch } from '../state';\n\n\nexport const loginAction = (payload) => {\n        console.log('action',payload)\n    dispatch({\n        type: 'LOGIN',\n        payload\n    })\n\n};\n\n\nexport const logoutAction = () => {\n    dispatch({\n        type: 'LOGOUT',\n    })\n\n};\n\n","import React, {Component} from 'react';\nimport Button from '../button/button';\nimport {logoutAction} from '../../actions/loginActions'\nimport {connect} from \"react-redux\";\nclass Navigations extends Component {\n\n\n    render() {\n        const { login } = this.props;\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n                    <ul className=\"navbar-nav mr-auto\">\n                        <li className=\"nav-item\">\n                            <Button className=\"nav-link\"  color=\"primary\" link='/main'>Главная</Button>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Button className=\"nav-link\"  color=\"primary\" link='/news'> Новости</Button>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Button className=\"nav-link\" color=\"primary\" link='/about'> О компании</Button>\n                        </li>\n                        <li className=\"nav-item ml-auto\">\n                            {login && <Button className=\"btn\" onClick={logoutAction} color=\"light\"> Выйти</Button>}\n                        </li>\n\n                    </ul>\n\n            </nav>\n        )\n    }\n}\nconst mapStateToProps = state =>({\n    login: state.login.login\n});\nexport default connect(mapStateToProps)(Navigations);\n","import React, {Component} from 'react';\nimport Navigations from '../navigations/navigations';\nclass Header extends Component {\n    render() {\n        return (\n            <div >\n               <Navigations/>\n            </div>\n        );\n    }\n}\n\nexport default Header;\n","import React from 'react';\n// import PropTypes from 'prop-types';\nimport './index.scss';\n\nclass Option extends React.Component {\n    handleClick = () => {\n        this.props.onClick && this.props.onClick(this.props.value);\n    };\n    isActive = item => {\n        return this.props.selected.includes(item);\n    };\n\n    render() {\n        let classOption;\n        if (!this.props.multiple) {\n            classOption = this.props.currentValue === this.props.value ? \"select__option selected\" : \"select__option\";\n\n        } else {\n            classOption = this.isActive(this.props.value) ? \"select__option selected\" : \"select__option\";\n\n        }\n        return (\n            <div className={classOption} onClick={this.handleClick}>{this.props.text}</div>\n        );\n    }\n}\n\nclass Select extends React.Component {\n    // constructor(props) {\n    // \tsuper(props);\n    // \tthis.state = {open: false}\n    // }\n    myRef = React.createRef();\n    state = {\n        open: false,\n        selected: [],\n        value: null,\n    };\n    componentDidMount() {\n       \n    }\n    componentDidUpdate(){\n        if(this.state.open){\n            document.addEventListener('click', this.checkClickOnSelect) \n        } else {\n            document.removeEventListener('click', this.checkClickOnSelect) \n        }\n    }\n    checkClickOnSelect = (event) =>{\n        \n        const node = this.myRef.current;\n        var box = node.getBoundingClientRect();\n        if(event.clientX > box.right || event.clientX < box.left || event.clientY > box.bottom || event.clientY < box.top){\n           this.handleToggle();\n        } \n        \n    }\n\n    get textField() {\n        const {input, items, labeltext} = this.props;\n        if (this.props.multiple) {\n            if (this.state.selected.length > 0) {\n                return [...this.state.selected].map(item => {\n                    return (\n                        <span\n                        onClick={(event) =>{\n                            event.stopPropagation()\n                        }}\n                            key={item}\n                            className='select__option--span'\n                        >\n                            {item}\n                            <i\n                                onClick={(event) =>{\n                                    event.stopPropagation()\n                                    this.handleClickRemove(item)}}\n                            >&#10008;</i>\n                        </span>)\n                })\n            } else {\n                return labeltext;\n            }\n\n        }\n\n        if (!input.value || input.value.length === 0) {\n            return labeltext;\n        } else {\n            const val = items.find(i => i.value === this.props.input.value);\n            return val && val.text;\n        }\n    }\n\n    handleClickRemove =(value) => {\n        this.select(value);\n        this.props.input.onChange(value);\n    };\n\n    handleClick = (value) => {\n        if (this.props.multiple) {\n            this.select(value);\n            this.props.input.onChange(value);\n        } else {\n            this.props.input.onChange(value);\n            this.handleToggle();\n        }\n\n    };\n    onChoseItem = items => {\n        const value = items.join(', ').slice(0, 50);\n        this.setState({\n            value: value === items.join(', ') ? value : `${value}...`,\n        });\n    };\n    handleToggle = (e) => {\n       \n        this.setState(prevState => ({open: !prevState.open}));\n    };\n\n    select = item => {\n        const hasSelected = this.state.selected.includes(item);\n        this.setState(state => ({\n            selected: hasSelected\n                ? state.selected.filter(i => i !== item)\n                : [...state.selected, item],\n        }));\n    };\n\n\n    handleClear = () => {\n        this.props.input.onChange(null);\n        this.handleToggle();\n    };\n\n    render() {\n        const {labeltext, items} = this.props;\n        const getText = this.textField;\n        return (\n            <div  className={`select ${this.state.open && 'opened'}`}>\n                <div\n                    className=\"select__block\"\n                    onClick={this.handleToggle}\n                >\n                    {getText}\n                </div>\n                <div ref={this.myRef} className=\"select__list\">\n                    <div className=\"select__option\" onClick={this.handleClear}>{labeltext}</div>\n                    {items.map(option => {\n                        return (\n                            <Option\n                                multiple={this.props.multiple}\n                                selected={this.state.selected}\n                                key={option.id}\n                                onClick={this.handleClick}\n                                value={option.value}\n                                text={option.text}\n                                currentValue={this.props.input.value}\n                            />\n                        );\n                    })}\n                </div>\n            </div>\n        );\n    }\n}\n\n// Select.propTypes = {\n// \tlabeltext: PropTypes.string,\n// };\n//\n// Select.DefaultProps = {\n// \ttype: \"text\",\n// };\n\nexport default Select;\n","import React from 'react';\n\n\nconst TabBarNav = ({\n                       navLabel, onChangeActiveTab, className\n                   }) => {\n\n    return (\n        <div\n            className={className}\n            onClick={() => {\n                onChangeActiveTab(navLabel)\n            }}\n        >\n            {navLabel}\n        </div>\n    )\n}\n\nexport default TabBarNav;","import React, { Component } from 'react';\nimport TabBarNav from './tabBarNav';\nimport './style.css'\n\n\nclass TabBar extends Component {\n\n  state = {\n    activeTab: null\n  }\n  \n  componentDidMount() {\n    const { children = [] } = this.props;\n    const activeTab = this.getChildrenLabels(children)[0];\n    this.setActiveTab(activeTab);\n\n  }\n\n  getChildrenLabels = (children) => {\n    return children.map(({ props }) => props.label);\n  }\n\n  setActiveTab = (activeTab) => {\n    console.log(activeTab)\n    const { activeTab: currentTab } = this.state;\n    if (currentTab !== activeTab) {\n      this.setState({\n        activeTab,\n      })\n    }\n  }\n\n\n  renderTabs = () => {\n    const { children = [] } = this.props;\n    const { activeTab } = this.state;\n    return (\n        <ul className='nav nav-tabs'>\n        {this.getChildrenLabels(children).map((navLabel) =>(\n            <li className='nav-item'>\n        <TabBarNav\n          key={navLabel}\n          navLabel={navLabel}\n          className={activeTab === navLabel ? 'nav-link active' : 'nav-link'}\n          onChangeActiveTab={this.setActiveTab}\n        />\n        </li>\n    ))}\n    </ul>)\n  }\n  render() {\n    const { activeTab } = this.state;\n    const { children, ...attrs } = this.props;\n\n\n    return (\n      <div {...attrs}>\n      <div className=\"tab-bar mt-5\">\n        {this.renderTabs()}\n      </div>\n        <div className=\"tab-container\">\n          {React.Children.map(children,child => React.cloneElement(child,{activeTab}))}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default TabBar;","import React  from 'react';\n\nconst TabBarItem = ({\n  children, label,activeTab, ...attrs,\n}) =>{\n  return (\n    <div className={activeTab === label ? 'tab-item tab-item--active' : 'tab-item'}>\n      {children}\n    </div>\n  )\n}\n\nexport default TabBarItem;","import React, {Component} from 'react';\nimport {Field, reduxForm} from 'redux-form'\nimport {connect} from 'react-redux';\nimport {loginAction} from '../../actions/loginActions';\nimport Select from \"../../components/select/select\";\nimport TabBar from \"../../components/tabBar/tabBar\";\nimport TabBarItem from \"../../components/tabBar/tabBarItem\";\n\nclass MainPage extends Component {\n\n\n    componentDidMount() {\n        // console.log(this.props)\n    }\n\n    _onSubmit = (formData) => {\n        loginAction(formData);\n    }\n\n    render() {\n        // const { login } = this.props;\n        return (\n            <div className='container'>\n                <h1>главная страница</h1>\n                <LoginReduxForm onSubmit={this._onSubmit}/>\n                <TabBar>\n                    <TabBarItem label='advantages'>\n                        Base nav\n\n                        Navigation available in Bootstrap share general markup and styles, from the base .nav class to\n                        the active and disabled states. Swap modifier classes to switch between each style.\n\n                        The base .nav component is built with flexbox and provide a strong foundation for building all\n                        types of navigation components. It includes some style overrides (for working with lists), some\n                        link padding for larger hit areas, and basic disabled styling.\n                    </TabBarItem>\n                    <TabBarItem label='testimonial'>\n                        Collapse\n\n                        Toggle the visibility of content across your project with a few classes and our JavaScript\n                        plugins.\n\n                    </TabBarItem>\n                    <TabBarItem label='posts'>\n                        Badges\n\n                        Documentation and examples for badges, our small count and labeling component.\n                    </TabBarItem>\n                </TabBar>\n            </div>\n        );\n    }\n}\n\n\nconst LoginForm = (props) => (\n    <form className='col-sm-10 col-md-5 col-12 col-xl-5' onSubmit={props.handleSubmit}>\n        <div className=\"form-group\">\n            <label htmlFor=\"exampleInputEmail1\">Login</label>\n            <Field type=\"text\" component={'input'} name=\"username\" className=\"form-control\" id=\"exampleInputEmail1\"\n                   aria-describedby=\"emailHelp\" placeholder=\"Login\"/>\n\n        </div>\n        <div className=\"form-group\">\n            <label htmlFor=\"exampleInputPassword1\">Password</label>\n            <Field component={'input'} type=\"password\" name=\"password\" className=\"form-control\"\n                   id=\"exampleInputPassword1\"\n                   placeholder=\"Password\"/>\n        </div>\n        <Field\n            name=\"beer\"\n            component={Select}\n            multiple\n            labeltext=\"Выберите какое пиво пить будете\"\n            items={[\n                {id: 1, value: \"Клинское\", text: \"Клинское\"},\n                {id: 2, value: \"Жигулевское\", text: \"Жигулевское\"},\n                {id: 3, value: \"Три медведя\", text: \"Три медведя\"},\n                {id: 4, value: \"Витязь\", text: \"Витязь\"},\n                {id: 5, value: \"Балтика\", text: \"Балтика\"},\n                {id: 6, value: \"Барин\", text: \"Барин\"},\n            ]}\n        />\n        {/* <Field\n            name=\"beer\"\n            component={Select}\n            labeltext=\"Выберите какое пиво пить будете\"\n            items={[\n                {id: 1, value: \"Клинское\", text: \"Клинское\"},\n                {id: 2, value: \"Жигулевское\", text: \"Жигулевское\"},\n                {id: 3, value: \"Три медведя\", text: \"Три медведя\"},\n                {id: 4, value: \"Витязь\", text: \"Витязь\"},\n                {id: 5, value: \"Балтика\", text: \"Балтика\"},\n                {id: 6, value: \"Барин\", text: \"Барин\"},\n            ]}\n        /> */}\n        <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n    </form>\n)\n\nconst LoginReduxForm = reduxForm({\n    form: 'loginForm',\n    // destroyOnUnmount: true,\n\n})(LoginForm);\n\nconst mapStateToProps = state => ({\n    login: state.login.login,\n    username: state.login.username,\n    password: state.login.password,\n});\n\nconst mapDispatchToProps = {\n    loginAction\n};\n// withLoginProps\n// export default compose(\n//     withLoginProps(),\n//     connect(mapStateToProps,mapDispatchToProps),\n// )(MainPage);\nexport default connect(mapStateToProps, mapDispatchToProps)(MainPage)\n","import React, { Component } from 'react';\nimport {Redirect} from \"react-router\";\nimport { connect } from \"react-redux\";\n\n// import Spinner from '../spinner';\n// import ErrorIndicator from '../error-indicator';\n\nconst withLoginProps = (View) => {\n    return class extends Component {\n        //\n        // state = {\n        //     data: null\n        // };\n\n        // componentDidMount() {\n        //     getData()\n        //         .then((data) => {\n        //             this.setState({\n        //                 data\n        //             });\n        //         });\n        // }\n\n        render() {\n            const { login } = this.props;\n\n            if (!login) {\n                return <Redirect to='/main'/>\n            }\n\n            return <View {...this.props} />;\n        }\n    };\n};\n\n\n\nexport default withLoginProps;\n","import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\nimport withLoginProps from \"../../hoc/withLoginProps\";\n\nclass AboutPage extends Component {\n    render() {\n        return (\n            <div>\n                О компании\n            </div>\n        );\n    }\n}\nconst mapStateToProps = state =>({\n    login: state.login.login\n});\n\nexport default connect(mapStateToProps)(withLoginProps(AboutPage))\n","import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\nimport withLoginProps from \"../../hoc/withLoginProps\";\n\nclass NewsPage extends Component {\n    render() {\n        return (\n            <div>\n               Новости\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state =>({\n    login: state.login.login\n});\n\nexport default connect(mapStateToProps)(withLoginProps(NewsPage))\n// export default NewsPage;\n","import React, {Component} from 'react';\nimport Header from \"./components/header/header\";\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport MainPage from \"./pages/mainPage/MainPage\";\nimport AboutPage from \"./pages/aboutPage/AboutPage\";\nimport NewsPage from \"./pages/newsPage/NewsPage\";\nimport {Provider} from 'react-redux';\nimport store from \"./state\";\n// import MyAwesomeComponent from './components/select/testSelect'\n\nclass App extends Component {\n    render() {\n        return (\n            <Provider  store={store}>\n                <BrowserRouter>\n                    <Header/>\n                    <div className='container pt-5'>\n                        {/* <MyAwesomeComponent/> */}\n                        <Switch>\n                            <Route path='/' exact component={MainPage}/>\n                            <Route path='/main' component={MainPage}/>\n                            <Route path='/about' component={AboutPage}/>\n                            <Route path='/news' component={NewsPage}/>\n                            <Route render={() => {\n                                return (<h2>Ничего</h2>)\n                            }}/>\n                        </Switch>\n                    </div>\n                </BrowserRouter>\n            </Provider>\n        );\n    }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}